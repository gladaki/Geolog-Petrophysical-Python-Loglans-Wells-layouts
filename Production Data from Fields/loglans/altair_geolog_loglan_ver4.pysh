#!/usr/bin/env python3
# python loglan

# Imports

#from pandas import DataFrame, read_csv
from pandas import DataFrame

import altair as alt
alt.renderers.enable('altair_viewer')
import altair_transform
alt.data_transformers.disable_max_rows()

import pandas as pd
import numpy as np

import geolog

# Load data from geolog
while geolog.gettable():

    df=pd.DataFrame({'wells':wells,'date':date,'bopm':bopm,'bwpm':bwpm,'xx_bottom':xx_bottom,'yy_bottom':yy_bottom,'wor':wor,'wcut':wcut,'lwcut':lwcut,'lwor':lwor})

    interval = alt.selection_interval()
    
    base = alt.Chart(df).properties(
        width=1000,
        height=1000, 
    ).add_selection(interval)
    
    
    points = base.mark_point(filled=True).encode(
        x='xx_bottom:Q',
        y='yy_bottom:Q',
        size='bopm:Q',
        #color=alt.condition(interval, 'wells', alt.value('lightgray')),
        color=alt.condition(interval, 'wells', alt.value('lightgray')),
        tooltip='wells', 
    ).properties(
        title='Field Map, Wells Sized by BOPM',
        selection=interval
    )
    
    
    timeseries = base.mark_line(clip=False).encode(
        x='date:T',
        #alt.X('date:T', timeUnit='year', axis=alt.Axis(title='')),
        y='sum(bopm):Q',
        #y=alt.Y('sum(bopm):Q', scale=alt.Scale(domain=(0, 10000000000))),
        #color=alt.Color('wells:O')
        color=alt.value('green'),
        tooltip='date:T' 
    ).properties(
        title='Production by Well in BOPM',
        width=450,
        height=300,
        #selection=interval
    ).transform_filter(
        #title='Volve Field BOPD',    
        interval
    )
    
    
    timeseries2 = base.mark_line(clip=False).encode(
        x='date:T',
        #alt.X('date:T', timeUnit='year', axis=alt.Axis(title='')),
        y='sum(bwpm):Q',
        #y=alt.Y('sum(bwpm):Q', scale=alt.Scale(domain=(0, 10000000000))),
        #color=alt.Color('wells:O')
        color=alt.value('blue'),
        tooltip='date:T', 
    ).properties(
        title='Production by Well in BWPM',
        width=450,
        height=300,
        #selection=interval
    ).transform_filter(
        #title='Volve Field BOPD',    
        interval
    )
    
    
    histd = alt.Chart(df).mark_line().encode(
        x='date:T',
        #alt.X('date:T', timeUnit='year', axis=alt.Axis(title='')),
        y='median(lwcut):Q',
        #alt.Y('mean(wcut)', scale=alt.Scale(type='log', base=10, domain=(0.001, 1.0)), axis=alt.Axis(orient='left') ),
        color=alt.value('blue'),
        #color='wells'
        #tooltip='date:T', 
    ).properties(
        width=1000,
        height=300
    ).transform_filter(
        interval
    )

    histcum = alt.Chart(df).mark_line().encode(
        x='bopm:Q',
        #alt.X('date:T', timeUnit='year', axis=alt.Axis(title='')),
        y='median(lwcut):Q',
        #alt.Y('mean(wcut)', scale=alt.Scale(type='log', base=10, domain=(0.001, 1.0)), axis=alt.Axis(orient='left') ),
        color=alt.value('blue'),
        #color='wells'
        #tooltip='date:T', 
    ).properties(
        width=1000,
        height=300
    ).transform_filter(
        interval
    )
  
    histcum2 = alt.Chart(df).mark_line().encode(
        #x='bopm:Q',
        alt.X('bopm:Q',  axis=alt.Axis(title='')),
        #y='median(lwcut):Q',
        alt.Y('mean(wcut)', scale=alt.Scale(type='log', base=10, domain=(0.00001, 1.0)), axis=alt.Axis(orient='left') ),
        color=alt.value('blue'),
        #color='wells'
        #tooltip='date:T', 
    ).properties(
        width=1000,
        height=300
    ).transform_filter(
        interval
    )


    
    first = points 
    second = timeseries | timeseries2 
    third =  histd 
    forth = histcum
    
    #points & timeseries & timeseries2 & bhp & hist & hist2 & hist3 
    
    plot=first & second & third & forth

    plot.show()
    
    # Store data into geolog
    geolog.puttable()




